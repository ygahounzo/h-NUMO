&eqnset
eqn_set='set2c',
equations='shallow',
is_swe_layers = F,
is_mlswe = T,
nonlinear_swe=0
/

&gridnl
nelx  = 10,
nely  = 10,
nelz  = 1,
nopx  = 4,
nopy  = 4,
nopz  = 0,
xdims = 0.0,2e3,
ydims = 0.0,2e3,
ztop  =  0.0,
nlayers = 2,

!P4est Input
!nelh=nel_root_h*(2^refinement_levels_h)
!nelv=nel_root_v*(2^refinement_levels_v)
nel_root_h = 1, !number of elements per cubed-sphere edge in horizontal
refinement_levels_h = 0, !refinement levels in horizontal
lp4est=T,
lp6est=F,
lio_grid_ascii=F,
lread_external_grid=F,

!Non-Conforming Grid
is_non_conforming_flg = 0, !0=no AMR; 1=Static AMR; 2=Dynamic AMR but with no initial refinement; 3=Dynamic AMR with Initial Refinement
!xlim_min = 0.0,
!xlim_max = 1000.0,
!ylim_min = 0.0,
!ylim_max = 1000.0,
!zlim_min = 0.0,
!zlim_max = 700.0,

!Build topography
lmountain=.false.,
mount_type='ridge_alongy', !ridge_alongy
mount_xc = 5000.0,
mount_yc = 0.0,
mount_hm = 1000.0,
mount_ac = 1000.0,
mount_bc = 1000.0,

!Vertical grid distribution with topography: sigma, hybrid, SLEVE
!zgrid_type = 'sigma',
!hybrid_s =  2000.0, ! mount_hc < hybrid_s <= ztop
!sleve_s2 =  2500.0, ! mount_hc < sleve_s  <= z1 < ztop
!sleve_s1 =  5000.0, !       z1 < sleve_s  <= ztop

!Grid stretching/clustering
!x
lxstretch     = .false.,
xstretch_coe  = 1.5, !chose a value > 1.0
xstretch_type = 'middle', !one_sided, middle, symmetric
!y
lystretch     = .false.,
ystretch_coe  = 2.5, !chose a value > 1.0
ystretch_type = 'middle', !one_sided, middle, symmetric
!z
lzstretch     = .false.,
zstretch_coe  = 2.5, !chose a value > 1.0
zstretch_type = 'one_sided', !one_sided, middle, symmetric

!Dimension of the domain: (x,y) in (min,max); z in (0,ztop)	
x_boundary = 4, 4 !Front and Back (x=-1 and x=+1)
y_boundary = 4, 4 !Left and Right (y=-1 and y=+1)
z_boundary = 4, 4 !Bottom and Top (z=-1 and z=+1)
	   !These denote constant x,y, or z. 
	   !E.g. z_boundary(1) is the bottom and z_boundary(2) is the top
	   !BCs are: 0=do nothing; 10=Dirichlet
	   !(see MOD_GLOBAL_GRID for more info)
x_periodic = 0,
y_periodic = 0,

geometry_type='cube', 
		      !cube=3D Box; 
		      !sphere_hex=spherical cubed-sphere domain; 
		      !sphere_ico=spherical icosahedral domain

decomp_type='metis2d',
			!metis3d=3D metis partitioning; 
			!metis2d=2D metis partitioning; 

/

&input
dt= 100,
dt_btp = 1.8,
!dt_safety_factor=0.5,
time_initial = 0.0,
time_final   = 10000,
time_restart = 100,
time_scale = 1, !1=seconds, 3600=hours, 86400=days
lrestart_file = .false.,

! mlswe parameter
ad_mlswe = 0.0, 
explt_coriolis = 0.0, 
cd_mlswe = 0.00, 
dp_cutoff1 = 1.0e6, 
dp_cutoff2 = 10.0e6, 
dp_tau_bot = 0.0, 
dp_tau_wind = 0.0,
method_visc = 2,
visc_mlswe = 1.0,
dpprime_visc_min = 2.0e7,
max_shear_dz = 10.0,
matlab_viz = T,
adjust_H_vertical_sum = 2,
mass_exact = F,
dg_integ_exact = T,

!----case
icase=2023,
	!Euler Test Cases------------------------------------
	!case0=advection; 
	!case1 = igw; 
	!case2=rtb; 

lread_sound=.false.,
lread_uvelo=.false.,
lread_vvelo=.false.,

uvelo_uniform=0.0,
vvelo_uniform=0.0,
wvelo_uniform=0.0,

ti_method = 'btp_bcl', 
	      !rk; (RK method of order KSTAGES)
	      !rk35; (Optimized RK35)

ti_method_btp = 'rk34',
kstages=5,

space_method = 'dg',    !cgc=continuous galerkin with global storage 
                         !cgd=continuous galerkin with local-element-wise(LEW) storage
                         !dg=discontinuous Galerkin

cgdg_method = 'separate', 
	     !unified=CG/DG use same Volume and Flux/BC Integrals;
	     !separate=CG/DG only use same Volume Integrals but different BCs;

si_method = 'no_schur', 
	    	!schur; 
	    	!no_schur
	    	
si_dimension = '3d', 
	       	     !1d IMEX in the vertical/radial direction; 
	       	     !3d IMEX

solver_type = 'direct',
	        !=direct uses a direct solver for SI_DIMENSION=1D and SI_METHOD=SCHUR form
	        !=iterative uses an iterative solver for SI_DIMENSION=1D and SI_METHOD=SCHUR form
solver_tol=1e-2,
	        !=1e-2 for IMEX-3D
	        !<=1e-9 for IMEX-1D (e.g., case 21 and case 7)
gamma1=-1, 
	   !-1=relative residual (works best for No Schur); 
	   !+1=absolute residual (works best for Schur)
delta=-1, 
	 !-1=No Semi-implicit; 
	 !0=No Semi-implicit but go through algorithm anyway (for debugging); 
	 !1=Semi-Implicit
filter_mux=0.05,
filter_muy=0.05,
filter_muz=0.05,
ifilter=1,
filter_weight_type='erf',
!filter_basis_type='modal',
filter_basis_type='legendre',
fname_root='mlswe',
format_vtk='ascii',
out_type='vtk',
		  !gks2d=ascii 2d slice; 
	       	  !gks3d=ascii 3d output; 
	       	  !nc=netcdf 3d output; 
	       	  !vtk=Visual ToolKit (Paraview) output
	       	  !none=No Output

!Outputvariables: check "mod_input" to see which ones are true by default
lout_rho=.true.,  
lout_velo=.true.,
lout_uvelo=.true.,
lout_vvelo=.true.,
lout_wvelo=.true.,
lout_theta=.true.,
lout_press=.true.,

!Chezy-Manning-Strickler Bottom Friction/Roughness coefficietn in seconds/meters**(1/3)
cms_coefficient=0.0 !0.01, !0.025 for case 25


!Limiter Info
llimit=F,
limiter_type='inundation',
limiter_qoi=5,
limit_threshold=1e-2,

ladapt_timestep=F, !turn on/off adaptive time-stepping
lprint_diagnostics=T, 
			   !T=true=print diagnostics
			   !F=false=do NOT print diagnostics
/
